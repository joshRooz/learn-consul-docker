version: '3.7'

services:
  
  consul-server:
    image: hashicorp/consul:1.15.2
    deploy:
      replicas: 3
    restart: unless-stopped
    networks:
      - consul
    ports:
      # port-fowarding on dynamic ephemeral ports so we can target
      # individual agents from host machine, if desired, while keeping the
      # compose services block small by using deploy.replicas. meanwhile,
      # the nginx service (defined below) exposes standard consul ports
      # for http and dns using docker's built-in dns server to forward.
      - 8500/tcp
      - 8600/tcp
      - 8600/udp
    command:
      - /bin/sh
      - -ec
      - >
        /bin/consul
        agent
        -server
        -data-dir=/consul/data
        -bootstrap-expect=3
        -retry-join=consul-server
        -client=0.0.0.0
        -ui
        -node=consul-server-$${HOSTNAME}
        -hcl='telemetry { prometheus_retention_time = "60s", disable_hostname = true }'

  consul-client:
    image: hashicorp/consul:1.15.2
    container_name: consul-client
    restart: always
    volumes:
      - ./client.json:/consul/config/client.json:ro
    networks:
      - consul
    command: "agent"

  grafana:
    image: grafana/grafana:9.5.1
    container_name: grafana
    restart: always
    volumes:
      - ./grafana/grafana.ini:/etc/grafana/grafana.ini
      - ./grafana/provisioning/:/etc/grafana/provisioning
      - ./grafana/dashboards/:/var/lib/grafana/dashboards
    networks:
      - consul
    ports:
      - "3000:3000"

  prometheus:
    image: prom/prometheus:v2.43.1
    container_name: prometheus
    restart: always
    volumes:
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
    networks:
      - consul
    ports:
      - 9090:9090
    command: --web.enable-lifecycle  --config.file=/etc/prometheus/prometheus.yml

  node-exporter:
    image: prom/node-exporter:v1.5.0
    container_name: node-exporter
    restart: always
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    command: 
      - '--path.procfs=/host/proc' 
      - '--path.sysfs=/host/sys'
      - --collector.filesystem.ignored-mount-points
      - "^/(sys|proc|dev|host|etc|rootfs/var/lib/docker/containers|rootfs/var/lib/docker/overlay2|rootfs/run/docker/netns|rootfs/var/lib/docker/aufs)($$|/)"
    networks:
      - consul
    ports:
      - 9100:9100

  # nginx proxy so we can use docker compose replicas while exposing
  # http/8500 and dns/8600 through port-forwarding
  nginx:
    image: nginx:1.24.0
    container_name: nginx
    restart: unless-stopped
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
    ports:
      - 8500:8500/tcp
      - 8600:8600/udp
      - 8600:8600/tcp
    networks:
      - consul

networks:
  consul:
    driver: bridge